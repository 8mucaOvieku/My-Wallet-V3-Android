package com.blockchain.koin

import org.koin.core.qualifier.StringQualifier
import org.koin.core.qualifier.named

val redesignPart2FeatureFlag = StringQualifier("ff_redesign_part_2")
val redesignPart2CoinViewFeatureFlag = StringQualifier("ff_redesign_part_2coinview")
val walletConnectFeatureFlag = StringQualifier("ff_wallet_connect")
val uiTourFeatureFlag = StringQualifier("ff_ui_tour")
val googlePayFeatureFlag = StringQualifier("ff_gpay")
val ethMemoHotWalletFeatureFlag = StringQualifier("ff_eth_memo")
val blockchainCardFeatureFlag = StringQualifier("ff_blockchain_card")
val termsAndConditionsFeatureFlag = StringQualifier("ff_terms_and_conditions")
val nabu = StringQualifier("nabu")
val status = StringQualifier("status")
val kotlinApiRetrofit = StringQualifier("kotlin-api")
val explorerRetrofit = StringQualifier("explorer")
val everypayRetrofit = StringQualifier("everypay")
val apiRetrofit = StringQualifier("api")
val moshiExplorerRetrofit = StringQualifier("moshi_explorer")
val gbp = StringQualifier("GBP")
val usd = StringQualifier("USD")
val eur = StringQualifier("EUR")
val priorityFee = StringQualifier("Priority")
val regularFee = StringQualifier("Regular")
val bigDecimal = StringQualifier("BigDecimal")
val kotlinJsonAdapter = StringQualifier("KotlinJsonAdapter")
val bigInteger = StringQualifier("BigInteger")
val interestLimits = StringQualifier("InterestLimits")
val kyc = StringQualifier("kyc")
val uniqueId = StringQualifier("unique_id")
val uniqueUserAnalytics = StringQualifier("unique_user_analytics")
val userAnalytics = StringQualifier("user_analytics")
val walletAnalytics = StringQualifier("wallet_analytics")
val payloadScopeQualifier = named("Payload")
val ioDispatcher = named("io_dispatcher")
